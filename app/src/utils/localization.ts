import i18n from 'i18next';
import { toast } from 'react-toastify';
import * as Yup from 'yup';

import { locale as enUsYup } from '@/locales/en-US.yup';
import { locale as jaJpYup } from '@/locales/js-JP.yup';

/**
 * ${language}-${region} の形式で定義されるロケールコードを表します。
 */
export const localeCodes = {
  jaJp: 'ja-JP',
  enUs: 'en-US',
} as const;

/**
 * ${language}-${region} の形式で定義されるロケールコードを表します。
 */
export type LocaleCodes = (typeof localeCodes)[keyof typeof localeCodes];

/**
 * ロケール名を表します。
 */
export const localeNames = {
  [`${localeCodes.jaJp}`]: '日本語',
  [`${localeCodes.enUs}`]: 'English',
} as const;

/**
 * 多言語表示に使用されるロケール情報を変更します。
 * @param localeCode ロケールコード
 */
export const changeLocale = (localeCode: LocaleCodes) => {
  switch (localeCode) {
    case localeCodes.enUs:
      i18n.changeLanguage(localeCode);
      Yup.setLocale(enUsYup);
      toast.info('The text is generated by machine translation.');
      break;
    default:
      i18n.changeLanguage(localeCodes.jaJp);
      Yup.setLocale(jaJpYup);
      break;
  }
};

/**
 * ロケール情報を初期化します。
 * 事前に i18next の初期化を完了させておく必要があります。
 * @param localeCode ロケールコード
 */
export const initLocale = (localeCode: LocaleCodes) => {
  if (!i18n.isInitialized) throw Error('Not initialized i18next. Please call i18n.use() before calling this function.');
  changeLocale(localeCode);
};

export default Yup;
