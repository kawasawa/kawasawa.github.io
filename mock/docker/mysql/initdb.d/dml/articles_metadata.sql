INSERT INTO articles_metadata VALUES
  ('5a6dee26db36aa83915f', '[覚書] MVVM の定義', '[Memorandum] Definition of MVVM', '## はじめに 忘れないように戒めの覚え書き。 以下、すべて独学のオレオレ MVVM で、原理原則から逸脱している部分もあるはず... あくまで個人的にはですが、使えるなら細かい定義は気にしない考えで...', '## Introduction A reminder of the commandments so you don''t forget them. The following is all self-taught MVVM, and there are bound to be some parts that deviate from the principles... This is just my personal opinion, but I don''t care about detailed definitions as long as it''s usable...', 'MVVM', 'https://qiita.com/kawasawa/items/5a6dee26db36aa83915f', 12, 5, 0, '2020-04-14T23:24:23+09:00', '2020-08-09T08:22:24+09:00'),
  ('1c40b596838c2e9e24f3', 'View を支えるコンバーター', 'Converter that supports View', '## はじめに 戒めの覚え書き　その２ 今回は MVVM の View 層について少し掘り下げます。 View 層に定義されるロジックは描画や表示に関わるものが基本となり、この実装をサポートするための...', '## Introduction Precepts Part 2 This time, we will dig a little deeper into the View layer of MVVM. The logic defined in the View layer is basically related to drawing and display, and to support this implementation...', 'C#, .NET, Xaml, MVVM', 'https://qiita.com/kawasawa/items/1c40b596838c2e9e24f3', 4, 4, 0, '2020-04-16T21:06:15+09:00', '2020-04-17T22:40:25+09:00'),
  ('d2ba3b9152be719bf364', 'View を支えるコンバーター（QuickConverter）', 'Converter that supports View (QuickConverter)', '## はじめに オレオレ解釈の戒め覚え書き　その３ [前回](https://qiita.com/kawasawa/items/1c40b596838c2e9e24f3)に続きコンバーターの話です。強...', '## Introduction Precepts for interpretation, part 3 [Last time](https://qiita.com/kawasawa/items/1c40b596838c2e9e24f3) This is a story about converters. strength...', 'C#, .NET, Xaml, MVVM', 'https://qiita.com/kawasawa/items/d2ba3b9152be719bf364', 4, 1, 0, '2020-04-17T23:47:17+09:00', '2020-04-18T22:23:05+09:00'),
  ('f373e45eeafd67fd23ff', 'View を支えるビヘイビア', 'Behaviors that support Views', '## はじめに オレオレ解釈の戒め覚え書き　その４ 今回はビヘイビアについてです。 ※Expression Blend に付属していた所謂 BlendBehavior と呼ばれているビヘイビアについて...', '## Introduction Precepts for Memorandum Interpretation Part 4 This time it''s about behavior. *About the behavior called BlendBehavior that came with Expression Blend...', 'C#, .NET, Xaml, MVVM', 'https://qiita.com/kawasawa/items/f373e45eeafd67fd23ff', 5, 4, 0, '2020-04-20T21:39:04+09:00', '2020-06-24T19:27:25+09:00'),
  ('bbd5efe79d2e712686cd', 'View を支えるトリガーアクション', 'Trigger action that supports View', '## はじめに オレオレ解釈の覚え書き　その５ トリガーアクションについてです。 ※今回も Expression Blend に付属する Trigger, Action について触れていきます。 ##...', '## Introduction Memorandum on my interpretation Part 5 This is about the trigger action. *This time we will also be talking about Trigger and Action that come with Expression Blend. ##...', 'C#, .NET, Xaml, MVVM', 'https://qiita.com/kawasawa/items/bbd5efe79d2e712686cd', 3, 5, 0, '2020-04-21T23:11:23+09:00', '2020-04-21T23:11:23+09:00'),
  ('5237aeb8610458e9a2d2', 'ViewModel と相互作用処理', 'ViewModel and interaction processing', '## はじめに オレオレ解釈の覚え書き　その６ 今回から ViewModel のお話です。ここでは相互作用処理についてまとめます。 ## 本文 MVVM における相互作用処理とはユーザとの対話が発生す...', '## Introduction Memorandum on my interpretation Part 6 This time we will talk about ViewModel. Here we will summarize interaction processing. ## Main text Interaction processing in MVVM involves interaction with the user...', 'C#, .NET, Xaml, MVVM, PRISM', 'https://qiita.com/kawasawa/items/5237aeb8610458e9a2d2', 3, 2, 1, '2020-04-27T23:14:59+09:00', '2020-04-28T06:38:21+09:00'),
  ('bd8c238f8f1d6a88e932', 'ViewModel と相互作用処理（DialogService）', 'ViewModel and interaction processing (DialogService)', '## はじめに オレオレ解釈の覚え書き　その７ 引き続き相互作用処理についての内容で、Prism 7.2 から採用された DialogService を使ったダイアログ表示の実装方法をまとめます。なお...', '## Introduction Memorandum on Interpretation Part 7 Continuing with the content of interaction processing, I will summarize how to implement dialog display using DialogService adopted from Prism 7.2. In addition...', 'C#, .NET, Xaml, MVVM, PRISM', 'https://qiita.com/kawasawa/items/bd8c238f8f1d6a88e932', 8, 1, 1, '2020-05-09T16:33:38+09:00', '2020-05-28T22:55:35+09:00'),
  ('11b5f090a302d5832fde', 'ViewModel と移譲コマンド', 'ViewModel and Delegation Commands', '## はじめに オレオレ解釈の覚え書き　その８ 移譲コマンドについてまとめます。 ## 本文 移譲コマンドとは ViewModel で宣言されるデリゲートです。View からバインドされることを前提に...', '## Introduction Memorandum on interpretation of Oreore Part 8 I will summarize the transfer commands. ## Body A delegate command is a delegate declared in a ViewModel. Assuming that it is bound from View...', 'C#, .NET, Xaml, MVVM', 'https://qiita.com/kawasawa/items/11b5f090a302d5832fde', 2, 1, 0, '2020-05-28T23:30:17+09:00', '2020-05-28T23:30:17+09:00'),
  ('c2c15d402eaf6ce08d61', 'ViewModel と変更通知プロパティ', 'ViewModel and change notification properties', '## はじめに オレオレ解釈の覚え書き　その９ 一番最初にやるべきだった変更通知プロパティについてまとめます。 タイトルには「ViewModel と～」とありますが、Model 層で使用される場合もあ...', '## Introduction Notes on my interpretation Part 9 I will summarize the change notification property that should have been done first. Although the title says "ViewModel and ~", it may be used in the Model layer...', 'C#, .NET, Xaml, MVVM', 'https://qiita.com/kawasawa/items/c2c15d402eaf6ce08d61', 10, 8, 0, '2020-06-03T23:48:15+09:00', '2020-06-04T08:32:42+09:00'),
  ('ec8d2a5589133cf63f74', 'ViewModel と変更通知プロパティ（ReactiveProperty）', 'ViewModel and change notification properties (ReactiveProperty)', '## はじめに オレオレ解釈の覚え書き　その１０ 変更通知プロパティの話から派生して、強力なライブラリである ReactiveProperty についてご紹介します。 ## 本文 前回ご紹介した変更通...', '## Introduction Memorandum on Interpretation Part 10 Derived from the change notification property story, I would like to introduce ReactiveProperty, a powerful library. ## Main text The changes introduced last time...', 'C#, .NET, Xaml, MVVM, ReactiveProperty', 'https://qiita.com/kawasawa/items/ec8d2a5589133cf63f74', 6, 2, 0, '2020-06-17T00:56:40+09:00', '2020-06-17T15:57:44+09:00'),
  ('1791950b687cd60efa86', 'View を支える依存関係プロパティ', 'Dependency properties that underpin Views', '## はじめに オレオレ解釈の覚書　その１１ 依存関係プロパティについてです。 ## 本文 依存関係プロパティとは簡単に言えば Xaml 上でバインドできるコントロールのプロパティです。身近なところで...', '## Introduction Memorandum on Interpretation Part 11 This is about dependency properties. ## Body Simply put, dependency properties are properties of controls that can be bound on Xaml. In a familiar place...', 'C#, .NET, Xaml, MVVM', 'https://qiita.com/kawasawa/items/1791950b687cd60efa86', 6, 6, 4, '2020-06-24T12:26:41+09:00', '2020-06-24T19:22:16+09:00'),
  ('36c18fdb512cc1bcbd54', 'View を支える添付プロパティ', 'Attached properties that support Views', '## はじめに オレオレ解釈の覚書　その１２ 依存関係プロパティに関連して、添付プロパティのまとめです。 ## 本文 添付プロパティも実体は依存関係プロパティと同じ DependencyPropert...', '## Introduction Memorandum on Interpretation Part 12 This is a summary of attached properties related to dependency properties. ## Body Attached properties are actually the same as dependency properties DependencyPropert...', 'C#, .NET, Xaml, MVVM', 'https://qiita.com/kawasawa/items/36c18fdb512cc1bcbd54', 5, 3, 0, '2020-06-24T19:32:04+09:00', '2020-06-24T19:32:04+09:00'),
  ('8d31e2678fb87c1d825e', 'ViewModel と相互作用処理（Messanger）', 'ViewModel and interaction processing (Messanger)', '## はじめに オレオレ解釈の覚書　その１３ Livet に用意された相互作用処理のため実装である Messanger についてまとめます。 ## 本文 [前回](https://qiita.com/...', '## Introduction Memorandum on Interpretation of Messenger Part 13 I will summarize Messanger, which is an implementation for interaction processing provided in Livet. ## Main text [Previous](https://qiita.com/...', 'C#, .NET, Xaml, MVVM, Livet', 'https://qiita.com/kawasawa/items/8d31e2678fb87c1d825e', 3, 1, 0, '2020-08-08T18:20:44+09:00', '2020-08-12T19:29:05+09:00'),
  ('888898c78ce37c6bc43c', '[覚書] MVVM の各層と配置', '[Memorandum] MVVM layers and placement', 'これもオレオレ解釈ですが、 覚え書きで挙げていた MVVM の各層と構成要素、サードパーティーの配置、それぞれの役割を一旦まとめると、以下の図のようになります（と思っています）。 実際にプログラムを書...', 'This is also my own interpretation, but if you summarize the MVVM layers and components listed in the memo, the placement of third parties, and their respective roles, it will look like the diagram below (I think). Actually write the program...', 'MVVM, PRISM', 'https://qiita.com/kawasawa/items/888898c78ce37c6bc43c', 4, 5, 0, '2020-08-19T00:45:55+09:00', '2020-08-23T20:14:58+09:00'),
  ('752865e571cbb4b6526f', 'AvalonEdit の改行マークを変更したい', 'I want to change the line break mark in AvalonEdit', '## はじめに 今回は小ネタです。この記事は AvalonEdit のカスタマイズを試みた際の備忘録です。 [自作のメモ帳アプリ](https://www.microsoft.com/ja-jp/p/...', '## Introduction This time it''s a small story. This article is a memo from when I tried to customize AvalonEdit. [Homemade memo pad app](https://www.microsoft.com/ja-jp/p/...', 'C#, WPF, 小ネタ, AvalonEdit', 'https://qiita.com/kawasawa/items/752865e571cbb4b6526f', 5, 2, 0, '2020-08-30T00:10:05+09:00', '2020-08-31T19:45:02+09:00'),
  ('45b5969c49084bd34a91', 'WPF 開発が捗る 神７', 'WPF development progresses God 7', '## はじめに 独学で習得してきた WPF ですが、決定的な指針が無く、開発が手探りになりがちでした。日本語の文献は少なく、ブログ等で有識者の手法を真似て実装しますが、流行り廃りが早いためなかなか環境...', '## Introduction I learned WPF by myself, but there were no definitive guidelines, and I tended to have trouble developing it. There is little literature in Japanese, and although I imitate and implement the methods of experts on blogs, etc., it is difficult to understand the environment because trends come and go quickly.', 'WPF, 雑記', 'https://qiita.com/kawasawa/items/45b5969c49084bd34a91', 123, 125, 3, '2020-10-30T11:45:03+09:00', '2021-01-18T21:30:28+09:00'),
  ('d579da43536984a275ec', 'KeyTrigger に紐づけたコマンドが何回も発報する', 'The command associated with KeyTrigger fires many times.', '## 困りごと 私のための備忘録。 以下のように KeyTrigger とコマンドを紐づけたコントロールを用意し、それを TabControl->TabItem に置いてみたところ、掲題のようにコマン...', '## Problems A memo for me. When I prepared a control that linked a KeyTrigger and a command as shown below and placed it in TabControl->TabItem, the command as shown in the title...', 'C#, WPF, 備忘録, PRISM', 'https://qiita.com/kawasawa/items/d579da43536984a275ec', 3, 2, 0, '2021-01-18T21:36:11+09:00', '2021-01-28T00:15:20+09:00'),
  ('18673e011265659beb64', 'WPF でサクッと多言語化したい、しかも動的に切り替えたい', 'I want to quickly multilingualize with WPF, and I want to switch dynamically.', '## はじめに WPF アプリケーションにおける動的な多言語対応について、サードパーティーの [WPFLocalizeExtension](https://www.nuget.org/packages...', '## Introduction For dynamic multilingual support in WPF applications, use the third-party [WPFLocalizeExtension](https://www.nuget.org/packages...', 'C#, WPF, 雑記, Xaml, PRISM', 'https://qiita.com/kawasawa/items/18673e011265659beb64', 4, 12, 0, '2021-07-06T18:33:50+09:00', '2021-07-06T18:33:50+09:00'),
  ('80960c415a972219d8e1', 'デスクトップ開発出身者が 無料のサービスだけ使って Web 開発に触れてみる', 'A person with a background in desktop development tries out web development using only free services.', '## はじめに 私は C#, WPF, .NET など Windows のデスクトップアプリ開発からスタートした人間で、Web 開発は体系的に学べておらず、実務で開発する機会があっても場当たり的な対応...', '## Introduction I started out developing Windows desktop applications using C#, WPF, .NET, etc., but I haven''t learned web development systematically, and even when I have opportunities to develop on the job, I only do it on an ad hoc basis...', 'GitHub, Heroku, Express, TypeScript, React', 'https://qiita.com/kawasawa/items/80960c415a972219d8e1', 26, 15, 0, '2021-12-18T00:52:52+09:00', '2021-12-20T20:49:45+09:00')
;
