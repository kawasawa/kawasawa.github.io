generator client {
  provider = "prisma-client-js"

  // バイナリの出力形式をベースイメージに応じて指定する
  // bullseye-slim では特段指定不要
  // alpine において GitHub Actions とローカルの両方で動作させるには下記を指定する
  binaryTargets = ["native", "linux-musl-openssl-3.0.x", "linux-musl-arm64-openssl-3.0.x"]
}

generator markdown {
  provider = "prisma-markdown"
  output   = "../dist/ERD.md"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_URL")
}

model articles_metadata {
  id             String   @id @db.Char(20)
  title_ja_jp    String   @db.VarChar(255)
  title_en_us    String   @db.VarChar(255)
  body_ja_jp     String   @db.Text
  body_en_us     String   @db.Text
  tags           String   @db.VarChar(255)
  url            String   @db.Text
  likes_count    Int
  stocks_count   Int
  comments_count Int
  created_at     DateTime @db.Timestamp(0)
  updated_at     DateTime @db.Timestamp(0)
}

model articles_pickup {
  id   String @id @db.Char(20)
  data String @db.Text
}

model career_details {
  career_id     Int
  row_no        Int
  subject_ja_jp String  @db.VarChar(255)
  subject_en_us String  @db.VarChar(255)
  skills        String? @db.Text
  careers       careers @relation(fields: [career_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "career_details_ibfk_1")

  @@id([career_id, row_no])
}

model careers {
  id             Int              @id @default(autoincrement())
  date           String           @db.VarChar(255)
  place          String           @db.VarChar(255)
  title_ja_jp    String           @db.VarChar(255)
  title_en_us    String           @db.VarChar(255)
  favicon        String?          @db.Text
  url            String?          @db.Text
  visible        Boolean
  career_details career_details[]
}

model certifications {
  id            Int     @id @default(autoincrement())
  date          String  @db.VarChar(255)
  title_ja_jp   String  @db.VarChar(255)
  title_en_us   String  @db.VarChar(255)
  subject_ja_jp String  @db.VarChar(255)
  subject_en_us String  @db.VarChar(255)
  favicon       String? @db.Text
  url           String? @db.Text
  visible       Boolean
}

model icons {
  id   String @id @db.VarChar(255)
  data String @db.Text
}

model product_images {
  product_id Int
  row_no     Int
  data       String   @db.Text
  products   products @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_images_ibfk_1")

  @@id([product_id, row_no])
}

model products {
  id             Int              @id @default(autoincrement())
  title_ja_jp    String           @db.VarChar(255)
  title_en_us    String           @db.VarChar(255)
  subject_ja_jp  String           @db.VarChar(255)
  subject_en_us  String           @db.VarChar(255)
  body_ja_jp     String           @db.Text
  body_en_us     String           @db.Text
  skills         String           @db.Text
  url_code       String           @db.Text
  url_home       String           @db.Text
  downloads      Int?
  pickup         Boolean
  visible        Boolean
  product_images product_images[]
}

model sns {
  id          Int     @id @default(autoincrement())
  title_ja_jp String  @db.VarChar(255)
  title_en_us String  @db.VarChar(255)
  favicon     String? @db.Text
  url         String? @db.Text
  visible     Boolean
}

model version {
  last_update String @id @db.VarChar(20)
}
