# NOTE: AWS におけるトラフィックの流れ
#   ここでは ECS Fargate で稼働する Node.js サーバまでのアクセス経路を確認する
#  1. 再起 DNS
#     クライアントは独自ドメイン (example.com などの文字列) を使用し通信を開始する
#     まずクライアント (正確には OS) は ISP (フレッツ光などが兼務している DNS サーバ) が提供する既定の再帰 DNS サーバに名前解決を依頼する
#     再起 DNS サーバは依頼されたドメイン名に対する名前解決がキャッシュされていればそれを返却、
#     キャッシュが無ければルートネームサーバ - TLD - SLD を経由し Route 53 が提供する権威 DNS サーバの IP アドレスを取得する
#     (ドメインを発行した際に NS レコードに登録する `ns-XXXX.awsdns-YY.tld` 等がこの権威 DNS サーバを指している)
#  2. Route 53
#     再起 DNS サーバが Route 53 が提供する権威 DNS サーバに名前解決を依頼する
#     Route 53 は CNAME (エイリアス) に登録された ALB のドメイン名 (xxx.ap-northeast-1.elb.amazonaws.com) を返却する
#     再起 DNS サーバは改めて ALB の名前解決を試行し、Amazon Provided DNS が提供する権威 DNS サーバの IP アドレスを取得する
#  3. Amazon Provided DNS
#     ALB のドメイン名は最終的に AWS 内で管理される DNS サーバ (Route 53 とは別) が名前解決し、ALB の public IP を返却する
#     再起 DNS サーバは宛先である IP アドレスをクライアントに返却する
#     クライアント (正確には OS) は TCP コネクションを確立し ALB と HTTPS リクエストを送信する
#  4. AWS Shield
#     クライアントからのトラフィックはまず AWS Shield に到達する
#     悪意のあるトラフィック (DDoS 等) であると判定された場合はここで破棄される (DDoS に対する IPS とも言える)
#     (public IP を持つ一部の AWS リソースは AWS Shield によって保護されている)
#  5. インターネットゲートウェイ
#     ALB は VPC 内のサブネット上にあるため、トラフィックはまず VPC の入口にある IGW に到達する
#     IGW はルートテーブルによって public サブネットと紐づけられており、トラフィックは登録ルートに従い ALB の ENI に転送される
#  6. セキュリティグループ (ALB)
#     トラフィックは ALB にアタッチされたセキュリティグループでフィルタリングされる
#     インバウンドルール (ingress) に従い検証され、許可されている条件に合致する場合のみ通過する
#  7. AWS WAF (ALB)
#     ALB に連携されている AWS WAF によってトラフィックは検査される
#     悪意のあるトラフィック (SQLi, XSS 等) であると判定された場合はここで破棄される (レイヤー 7 に対する IPS とも言える)
#     (流量制限もこのタイミングで実施されている)
#  8. ALB
#     ALB はリスナールールを確認し、対応するターゲットグループにトラフィックを転送する
#  9. ターゲットグループ
#     ターゲットグループは ECS サービスから連携を受けている ECS タスク (Fargate) の private IP にトラフィックを転送する
#     負荷分散されている (ECS タスクが複数存在する) 場合は、ヘルスチェックに成功したタスクへ順番 (ラウンドロビン等の方式) に転送する
#     (ターゲットグループは ECS タスクが生成された際に連携を受けて宛先を自動整備する)
# 10. セキュリティグループ (ECS)
#     トラフィックは ECS サービスにアタッチされたセキュリティグループでフィルタリングされる
#     インバウンドルール (ingress) に従い検証され、許可されている条件に合致する場合のみ通過する
# 11. ECS (Fargate)
#     Fargate で実行されている ECS タスク (Node.js サーバを実行する Docker コンテナ) がリクエストを受け取る
#     ECS のレスポンスは ALB が中継し、IGW を経由してリクエスト元に返却される
#     この際、既にインバウンドルールで許可された通信であるため、各セキュリティグループは無条件でレスポンスを通過させる (ちゃんと記憶されている ≒ ステートフル)

# VPC 作成時に AWS 側で自動的にデフォルトのセキュリティグループとルートテーブルが生成される
# デフォルトのセキュリティグループは全てのインバウンド/アウトバウンド通信を許可している
# デフォルトのルートテーブルは local ルートが登録されており、いずれのルートテーブルとも関連付けが無いサブネットに対して適用される
# 実運用ではいずれも明示的に定義することが基本であるため、デフォルトで追加されるリソースは使用しない

resource "aws_vpc" "main" {
  enable_dns_support   = true             # DNS サポートを有効化する
  enable_dns_hostnames = true             # DNS ホスト名を取得する
  cidr_block           = var.cidrs["vpc"] # VPC 内で使用するプライベート IP の範囲
  tags                 = { Name = "${var.prefix}-vpc" }
}
